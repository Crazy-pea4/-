{"version":3,"file":"ast.js","sources":["../src/js/parseAttrs.js","../src/js/parse.js","../src/index.js"],"sourcesContent":["export default function parseAttrs(attrs) {\r\n  const result = [{}];\r\n  if (attrs) {\r\n    attrs = attrs.trim();\r\n    console.log(attrs);\r\n    const arr = attrs.split('\"');\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (arr[i]) {\r\n        arr[i] = arr[i].trim();\r\n        // 双数代表属性名\r\n        if (i % 2 === 0) {\r\n          // 删掉属性名最后面的 =\r\n          arr[i] = arr[i].slice(0, -1);\r\n          result[result.length - 1].name = arr[i];\r\n          console.log(arr[i]);\r\n        } else {\r\n          // 单数代表属性值\r\n          result[result.length - 1].value = arr[i];\r\n          console.log(arr[i]);\r\n          result.push({});\r\n        }\r\n      }\r\n    }\r\n    // 最后再移除掉多出来的一个空对象 {}\r\n    result.splice(result.length - 1, 1);\r\n    return result;\r\n  } else return [];\r\n  // return [{ name, value }];\r\n}\r\n","import parseAttrs from \"./parseAttrs\";\r\n\r\nexport default function (template) {\r\n  // startTag（第一个分组是标签名字，第二个分组是attrs）\r\n  const sReg = /^\\<([a-zA-Z]+[1-9]?)(\\s[^>]+)?\\>/;\r\n  // endTag（）\r\n  const eReg = /^\\<\\/([a-zA-Z]+[1-9]?)\\>/;\r\n  const wordReg = /^([\\w]+)\\<\\/[a-zA-Z]+[1-9]?\\>/;\r\n  let rest = template;\r\n  let index = 0;\r\n  const tagStack = [];\r\n  const valueStack = [{ children: [] }];\r\n\r\n  while (index < template.length - 1) {\r\n    rest = template.substr(index);\r\n    if (sReg.test(rest)) {\r\n      // 标签开始\r\n      const sTarget = rest.match(sReg)[1];\r\n      // 标签属性（有些标签有属性有些没有，所以要做判断处理）\r\n      let attrs = rest.match(sReg)[2];\r\n      attrs = parseAttrs(attrs);\r\n      console.log(\"标签开始\", sTarget, rest.match(sReg));\r\n      tagStack.push(sTarget);\r\n      valueStack.push({ tag: sTarget, children: [], attrs: attrs });\r\n      // 只sTarget只获取到<xxx>内部的xxx，还要加上<>本身占的两个字符\r\n      const attrsLength = attrs != undefined ? attrs.length : 0;\r\n      index += sTarget.length + attrsLength + 2;\r\n    } else if (eReg.test(rest)) {\r\n      // 标签结束\r\n      const eTarget = rest.match(eReg)[1];\r\n      console.log(\"标签结束\", eTarget);\r\n      if (eTarget === tagStack[tagStack.length - 1]) {\r\n        const popTag = tagStack.pop();\r\n        const popValue = valueStack.pop();\r\n        valueStack[valueStack.length - 1].children.push(popValue);\r\n        console.log(tagStack, JSON.stringify(valueStack));\r\n      } else {\r\n        throw new Error(\"tag is not sealed\");\r\n      }\r\n      // 这里的+3 是因为还要算上 /\r\n      index += eTarget.length + 3;\r\n    } else if (wordReg.test(rest)) {\r\n      // 处理开始标签与结束标签之间的文本\r\n      const word = rest.match(wordReg)[1];\r\n      valueStack[valueStack.length - 1].children.push({ text: word, type: 3 });\r\n      console.log(\"文字信息\", word);\r\n      index += word.length;\r\n    } else {\r\n      index++;\r\n    }\r\n  }\r\n  return valueStack[0].children;\r\n}\r\n","import parse from \"./js/parse\";\r\n\r\nconst template = `<div>\r\n      <h3 class=\"title sTitle\" id=\"t\">hello</h3>\r\n      <ul>\r\n        <li>1</li>\r\n        <li>2%%</li>\r\n        <li>3</li>\r\n      </ul>\r\n</div>`;\r\n\r\nconst str = parse(template);\r\n\r\nconsole.log(str);\r\n"],"names":["parseAttrs","attrs","result","trim","console","log","arr","split","i","length","slice","name","value","push","splice","template","sReg","eReg","wordReg","rest","index","tagStack","valueStack","children","substr","test","sTarget","match","tag","attrsLength","undefined","eTarget","pop","popValue","JSON","stringify","Error","word","text","type","str","parse"],"mappings":"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"}